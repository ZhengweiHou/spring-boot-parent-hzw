<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans default-lazy-init="false"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"

       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.2.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.1.xsd"
       >



    <!-- CAS Configuration-->
    <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties" >
        <property name="service"
                  value="http://localhost:8080/login/cas"/>
        <property name="sendRenew" value="false"/>
    </bean>

    <!-- CAS Filter-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider" />
    </security:authentication-manager>
    <bean id="casAuthenticationProvider"
          class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="authenticationUserDetailsService">
            <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <constructor-arg ref="userService" />
            </bean>
        </property>
        <property name="serviceProperties" ref="serviceProperties" />
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="https://localhost:8443/cas" />
            </bean>
        </property>
        <property name="key" value="casAuthProviderKey"/>
    </bean>
    <security:user-service id="userService">
        <security:user name="xiaof" password="post-it" authorities="ROLE_ADMIN,ROLE_USER" />
        <security:user name="test1" password="" authorities="ROLE_USER" />
    </security:user-service>

    <bean id="casFilter"
          class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="https://localhost:8443/cas/login"/>
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>

    <!-- CSRF Configuration-->
    <!--<bean id="csrfTokenFilter" class="com.test.cloud.security.CsrfTokenFilter"/>-->

    <!-- CAS Logout Configuration-->
    <!-- This filter handles a Single Logout Request from the CAS Server -->
    <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    <!-- This filter redirects to the CAS Server to signal Single Logout should be performed -->
    <bean id="requestSingleLogoutFilter"
          class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="https://ssomanage.test.com:8443/cas/logout"/>
        <constructor-arg>
            <bean class= "org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/logout/cas"/>
    </bean>
    <!--<security:debug/>-->
    <!-- General Configuration-->
    <security:http
            auto-config="false"
            entry-point-ref="casEntryPoint">
        <security:intercept-url pattern="/" access="permitAll" />
        <security:intercept-url pattern="/login/cas" access="permitAll" />
        <!--<security:intercept-url pattern="/index.jsp" access="permitAll" />-->
        <security:intercept-url pattern="/view/app/pages/**" access= "hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern="/**" access= "hasRole('ROLE_USER')" />
        <security:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
        <security:custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
        <security:custom-filter ref="casFilter" position="CAS_FILTER" />
        <!--<security:csrf disabled="true"/>-->
        <!-- CSRF 跨站请求伪造，spring-security-3.1.xsd 中不支持该配置，需用spring-security-4.0.xsd -->
        <!--<security:custom-filter ref="csrfTokenFilter" after="CSRF_FILTER"/>   -->
    </security:http>












</beans>


