<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <!--
    org.jasig.cas.client.authentication.AuthenticationFilter
    检测用户是否需要认证的工具。如果需要认证用户，它将把用户重定向到CAS服务器
    -->
    <filter>
        <filter-name>CAS Authentication Filter</filter-name>
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
        <init-param>
            <param-name>casServerLoginUrl</param-name>
            <param-value>https://localhost:8443/cas_server_web_war/login/</param-value>
<!--            <param-value>http://localhost:8080/cas_server_web_war/login/</param-value>-->
        </init-param>
        <init-param>
            <param-name>casServerUrlPrefix</param-name>
            <param-value>https://localhost:8443/cas_server_web_war</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>localhost</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CAS Authentication Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--
    org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter
    使用CAS 2.0协议验证票证。如果您提供`acceptAnyProxy`或`allowedProxyChains`参数，则将构建`Cas20ProxyTicketValidator`。否则，将构造不接受代理票证的常规“ Cas20ServiceTicketValidator”。
    -->
    <filter>
        <filter-name>CAS Validation Filter</filter-name>
        <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
        <init-param>
            <param-name>casServerUrlPrefix</param-name>
<!--            <param-value>https://localhost:8443/cas_server_web_war</param-value>-->
            <param-value>http://localhost:8080/cas_server_web_war</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>localhost</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--
    org.jasig.cas.client.util.HttpServletRequestWrapperFilter
    包装HttpServletRequest，以便getRemoteUser和getPrincipal返回与CAS相关的条目
    -->
    <filter>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--
    org.jasig.cas.client.util.AssertionThreadLocalFilter
    对于需要访问它的应用程序部分，将其断言放置在ThreadLocal中。此过滤器“前端”的Web应用程序需要获取主体名称时很有用，但是它无法访问HttpServletRequest，因此无法进行getRemoteUser（）调用。
    -->
    <filter>
        <filter-name>CAS Assertion Thread Local Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS Assertion Thread Local Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--
    org.jasig.cas.client.util.ErrorRedirectFilter
    根据异常重定向到指定url
    -->
    <filter>
        <filter-name>CAS Error Redirect Filter</filter-name>
        <filter-class>org.jasig.cas.client.util.ErrorRedirectFilter</filter-class>
        <init-param>
            <param-name>java.lang.Exception</param-name>
            <param-value>/error.jsp</param-value>
        </init-param>
        <init-param>
            <param-name>defaultErrorRedirectPage</param-name>
            <param-value>/defaulterror.jsp</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CAS Error Redirect Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>




    <!-- CAS 配置文件结束 -->

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>

