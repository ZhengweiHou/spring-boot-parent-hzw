<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans default-lazy-init="false"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"

       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:component-scan base-package="com.hzw.learn.springboot.springbase.DI.DICircle"/>


    <!-- A 注入 B; B 注入C； C 注入 A  分析以下三中情况是否存在异常-->

    <!-- 1. 通过setter注入方式，构造循环依赖情况  这个方式spring能解决循环依赖 -->
    <bean id="aBean" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleABean" p:bBean-ref="bBean"/>
    <bean id="bBean" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleBBean" p:cBean-ref="cBean"/>
    <bean id="cBean" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleCBean" p:aBean-ref="aBean"/>

    <!-- 2. 通过构造器注入循环依赖情况 若aBean不是构造参数依赖注入的话，则其不处于创建池中，当创建cBean注入aBean时不会有Requested bean is currently in creation异常 -->
    <bean id="aBeanC0" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleABean" p:bBean-ref="bBeanC0"/>
<!--    <bean id="aBeanC0" class="com.hzw.learn.springboot.springbase.DICircle.CircleABean" c:_0-ref="bBeanC0"/>-->
    <bean id="bBeanC0" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleBBean" c:_0-ref="cBeanC0"/>
    <bean id="cBeanC0" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleCBean" c:_0-ref="aBeanC0"/>
<!--    <bean id="cBeanC0" class="com.hzw.learn.springboot.springbase.DICircle.CircleCBean" p:aBean-ref="aBeanC0"/>-->

    <!-- 3. 通过构造器注入方式构造循环依赖情况   这个方式spring处理不了 会产生 aBeanC1:Requested bean is currently in creation 异常 -->
    <bean id="aBeanC1" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleABean" c:_0-ref="bBeanC1"/>
<!--    <bean id="bBeanC1" class="com.hzw.learn.springboot.springbase.DICircle.CircleBBean" c:_0-ref="cBeanC1"/>-->
<!--    <bean id="cBeanC1" class="com.hzw.learn.springboot.springbase.DICircle.CircleCBean" c:_0-ref="aBeanC1"/>-->
    <bean id="bBeanC1" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleBBean" p:cBean-ref="cBeanC1"/>
    <bean id="cBeanC1" class="com.hzw.learn.springboot.springbase.DI.DICircle.CircleCBean" p:aBean-ref="aBeanC1"/>

</beans>


