<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans default-lazy-init="false"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
	   	http://www.springframework.org/schema/beans
	   	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   	http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/context
	   	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	   	http://www.springframework.org/schema/tx
	   	http://www.springframework.org/schema/tx/spring-tx.xsd
">


    <context:component-scan base-package="com.hzw.learn.springboot.batchbase.patrition"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <!--		<property name="url" value="jdbc:mysql://localhost:3306/springbatch" />-->
        <property name="url" value="jdbc:mysql://localhost:3306/springbatchtest_4_2_7"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
        <property name="validationQuery" value=""/>
    </bean>

    <bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"
    />



    <!-- 事务注解处理支持 -->
    <tx:annotation-driven transaction-manager="transactionManager" mode="proxy"/>

    <batch:job-repository id="jobRepository" data-source="dataSource"
                          transaction-manager="transactionManager" isolation-level-for-create="REPEATABLE_READ"
                          table-prefix="BATCH_" max-varchar-length="1000"
    />
    <!--	max-varchar-length="1000"-->

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <task:executor id="executor" pool-size="16"/>

    <!--file-->
    <bean id="hzw_file1" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg type="java.lang.String" value="src/main/resources/partition/hzw_file1.txt"/>
    </bean>

    <!--partition-->
    <bean id="partition_hzw_file1" class="com.hzw.learn.springboot.batchbase.patrition.support.HzwResourcePartitioner"
          p:resource-ref="hzw_file1"
          p:lineBytesLength="10"
    />

    <bean id="hReader" class="com.hzw.learn.springboot.batchbase.patrition.hstep.HReader" scope="step"/>
    <bean id="hPartReader" class="com.hzw.learn.springboot.batchbase.patrition.hstep.HzwPartitionResourceItemReader" scope="step"/>
    <bean id="hProdessor" class="com.hzw.learn.springboot.batchbase.patrition.hstep.HProdessor" scope="step"/>
    <bean id="hWriter" class="com.hzw.learn.springboot.batchbase.patrition.hstep.HWriter" scope="step"/>


    <!-- 定义step模板，用于绑定listener等，后续定义step时指定该parent就可以继承这里的配置 -->
    <batch:step id="step_template" abstract="true">
        <batch:listeners>
            <batch:listener ref="hzwJobAndStepExecutionListener"/>
            <batch:listener ref="hzwStepExecutionListener"/>
        </batch:listeners>
    </batch:step>

    <batch:step id="hstep">
        <batch:tasklet>
            <batch:listeners>
                <batch:listener ref="hzwStepExecutionListener"/>
            </batch:listeners>
            <batch:chunk reader="hPartReader" processor="hProdessor" writer="hWriter"
                         commit-interval="5"/>  <!-- commit-interval 指定单事务commit数量 -->
        </batch:tasklet>
    </batch:step>



    <!-- create job -->
    <batch:job id="partitionDemoJob" job-repository="jobRepository">
        <batch:listeners>
            <batch:listener ref="hzwJobExecutionListener"/>
            <batch:listener ref="hzwJobAndStepExecutionListener"/>
        </batch:listeners>

<!--        <batch:step id="partitionStep1" next="split1">-->
        <batch:step id="partitionStep1">
            <batch:partition partitioner="partition_hzw_file1" step="hstep">
                <batch:handler grid-size="2" task-executor="executor"/>  <!-- 指定分片数量  task-executor 指定任务的执行池-->
            </batch:partition>
        </batch:step>

      <!--  <batch:split id="split1">
            <batch:flow>
                <batch:step id="h_s_step1" parent="step_template">
                    <batch:tasklet>
                        <batch:chunk reader="hReader" processor="hProdessor" writer="hWriter"
                                     commit-interval="5"/>  &lt;!&ndash; commit-interval 指定单事务commit数量 &ndash;&gt;
                    </batch:tasklet>
                </batch:step>
            </batch:flow>
            <batch:flow>
                <batch:step id="h_s_step2" parent="step_template">
                    <batch:tasklet>
                        <batch:chunk reader="hReader" processor="hProdessor" writer="hWriter"
                                     commit-interval="5"/>  &lt;!&ndash; commit-interval 指定单事务commit数量 &ndash;&gt;
                    </batch:tasklet>
                </batch:step>
            </batch:flow>
        </batch:split>-->

    </batch:job>


    <!-- listener 懒加载测试 -->
    <bean id="hzwJobExecutionListener" class="com.hzw.learn.springboot.batchbase.patrition.support.listener.HzwStepExecutionListener" lazy-init="true"/>


    <bean id="hzwmapping" class="java.util.HashMap" scope="step">
        <constructor-arg>
            <map>
                <entry key="k1" value="v1"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="hzw3" class="com.hzw.learn.springboot.batchbase.scoperrtest.HzwBean2" scope="prototype">
        <property name="map1" ref="hzwmapping"/>
    </bean>
</beans>
